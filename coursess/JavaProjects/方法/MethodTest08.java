/*
 方法在执行过程当中,在JVM(Java虚拟机)中内存是如何分配的,内存是如何变化的
    1、方法只定义不调用是不会执行的,并且在JVM也不会给该方法分配运算所属的内存空间
        只要在调用这个方法的时候,才会动态的给这个方法分配所属的内存空间
 
    2、在JVM内存划分上有这样三块主要的内存空间(当然除了这三个之外还有其他的内存空间)
        *方法区内存
        *堆内存
        *栈内存
    
    3、关于"栈"数据结构:
        *栈:stack，是一种数据结构
        *数据结构就是数据的存储形态
        *数据结构是独立的学科,不属于任何编程语言,只不过再大多数编程语言当中要使用数据结构
        *作为程序员需要提前精通:数据结构+算法
        
    4、常见的数据结构：
        数组、队列、栈、二叉树、哈希表/散列表
 
    5、方法代码片段存在哪里？方法执行的时候执行过程的内存在哪里分配？
        *方法代码片段属于.class字节码文件的一部分,字节码文件在类型加载的时候,将其放到了方法区域当中,
        所以在JVM中的三块主要的内存空间中方法区内存最先有数据,存放代码片段。
 
        *代码片段虽然在方法区内存当中只有一份,但是可以被重复调用。
            每一次调用这个方法的时候,需要给该方法分配独立的活动场所,在栈内存中分配
            (栈内存中分配方法运行的所属内存空间)
 
    6、方法在调用的瞬间,会给该方法分配独立的内存空间,在"栈"中分配,此时发生"压栈"动作,方法执行结束之后,给该方法分配的内存空间全部释放,此时发生"弹栈"动作。
        -压栈:给方法分配内存
        -弹栈:释放该方法的内存空间
 
    7、局部变量在方法体中声明,局部变量在运行阶段在栈中存储。
 */
public class MethodTest08{
    public static void main(String[] args){
        
    }
}
